/*!
    Title: Dev Portfolio Template
    Version: 1.2.2
    Last Change: 03/25/2020
    Author: Ryan Fitzgerald
    Repo: https://github.com/RyanFitzgerald/devportfolio-template
    Issues: https://github.com/RyanFitzgerald/devportfolio-template/issues

    Description: This file contains all the scripts associated with the single-page
    portfolio website.
*/


!(function (n) {
  n("html").removeClass("no-js"),
  n("header a").click(function (e) {
    if (!n(this).hasClass("no-scroll")) {
      e.preventDefault();
      var t = n(this).attr("href"),
          targetOffset = n(t).offset().top,
          distance = Math.abs(window.pageYOffset - targetOffset);
  
      // Set a base speed multiplier (lower values make it faster)
      var speedMultiplier = 0.3; // Adjust this value to control speed
  
      // Calculate duration based on distance and multiplier
      var duration = distance * speedMultiplier;
  
      // Minimum duration to avoid very fast scrolls for short distances
      if (duration < 400) duration = 400; // Set a minimum duration of 200ms
  
      n("html, body").animate(
        { scrollTop: targetOffset + "px" },
        duration
      );
  
      n("header").hasClass("active") &&
        n("header, body").removeClass("active");
    }
  }),
    n("#to-top").click(function () {
      n("html, body").animate({ scrollTop: 0 }, 500);
    }),
    n("#lead-down span").click(function () {
      var e = n("#lead").next().offset().top;
      n("html, body").animate({ scrollTop: e + "px" }, 500);
    }),
    n("#experience-timeline").each(function () {
      ($this = n(this)),
        ($userContent = $this.children("div")),
        $userContent.each(function () {
          n(this)
            .addClass("vtimeline-content")
            .wrap(
              '<div class="vtimeline-point"><div class="vtimeline-block"></div></div>'
            );
        }),
        $this.find(".vtimeline-point").each(function () {
          n(this).prepend(
            '<div class="vtimeline-icon"><i class="fa fa-map-marker"></i></div>'
          );
        }),
        $this.find(".vtimeline-content").each(function () {
          var e = n(this).data("date");
          e &&
            n(this)
              .parent()
              .prepend('<span class="vtimeline-date">' + e + "</span>");
        });
    }),
    n("#mobile-menu-open").click(function () {
      n("header, body").addClass("active");
    }),
    n("#mobile-menu-close").click(function () {
      n("header, body").removeClass("active");
    }),
    n("#view-more-projects").click(function (e) {
      e.preventDefault(),
        n(this).fadeOut(300, function () {
          n("#more-projects").fadeIn(300);
        });
    });
})(jQuery);

let slideIndexes = [1, 1, 1]; // Store slideIndex for each carousel

function plusSlides(n, carouselId) {
  showSlides(slideIndexes[carouselId - 1] += n, carouselId);
}

function currentSlide(n, carouselId) {
  showSlides(slideIndexes[carouselId - 1] = n, carouselId);
}

function showSlides(n, carouselId) {
  let i;
  let carousel = document.getElementById("carousel" + carouselId);
  let slides = carousel.getElementsByClassName("mySlides");
  let dots = carousel.getElementsByClassName("dot");

  if (n > slides.length) {slideIndexes[carouselId - 1] = 1}
  if (n < 1) {slideIndexes[carouselId - 1] = slides.length}

  for (i = 0; i < slides.length; i++) {
    slides[i].style.display = "none";
  }
  for (i = 0; i < dots.length; i++) {
    dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndexes[carouselId - 1] - 1].style.display = "block";
  dots[slideIndexes[carouselId - 1] - 1].className += " active";
}

// Initialize slides for each carousel
showSlides(1, 1);
showSlides(1, 2);
showSlides(1, 3);